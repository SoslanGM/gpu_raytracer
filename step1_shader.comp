#version 460

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;
layout (push_constant) uniform range
{
    uint thread_count;
    uint check_digit;
};

struct entry
{
    uint index;
    uint code;
};
layout(std430, set = 0, binding = 0) coherent buffer mortons_  { entry morton_data[]; };
layout(std430, set = 0, binding = 1) coherent buffer flagzero_ { uint flag_zero[];   };
layout(std430, set = 0, binding = 2) coherent buffer flagone_  { uint flag_one[];    };

void main()
{
    uint global_index = gl_GlobalInvocationID.x;
    if(global_index > thread_count)
        return;
    uint local_index = gl_LocalInvocationID.x;
    
    uint bit = (morton_data[global_index].code & (1<<check_digit))>>check_digit;
    flag_zero[global_index] = (bit==0) ? 1 : 0;
    flag_one[global_index]  = bit;
}