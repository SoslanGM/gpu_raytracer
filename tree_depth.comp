#version 460

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout (push_constant) uniform range
{
    uint thread_count;
};

struct tree_entry
{
    //int d;
    //int delta_min;
    //int delta_node;
    int parent;
    int left;
    int right;
};
layout (std430, set = 0, binding = 0) coherent buffer TreeData   { tree_entry tree_data[]; };
layout (std430, set = 0, binding = 1) coherent buffer TreeDepths { uint tree_depths[]; };


void main()
{
    uint global_index = gl_GlobalInvocationID.x;
    if(global_index > thread_count)
        return;
    
    uint node = global_index;
    uint depth = 0;
    
    while(tree_data[node].parent != -1)
    {
        node = tree_data[node].parent;
        depth++;
    }
    
    tree_depths[global_index] = depth;
}